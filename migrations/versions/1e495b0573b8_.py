"""empty message

Revision ID: 1e495b0573b8
Revises: 
Create Date: 2024-02-19 14:02:31.276924

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1e495b0573b8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('author', sa.String(length=255), nullable=False),
    sa.Column('genre', sa.String(length=60), nullable=False),
    sa.Column('publishDate', sa.Date(), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book'))
    )
    op.create_table('genre',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_genre'))
    )
    op.create_table('users_profiles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('profile', sa.String(length=80), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users_profiles')),
    sa.UniqueConstraint('profile', name=op.f('uq_users_profiles_profile'))
    )
    op.create_table('book_genre',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('bookId', sa.Uuid(), nullable=False),
    sa.Column('genreId', sa.Uuid(), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['bookId'], ['book.id'], name=op.f('fk_book_genre_bookId_book')),
    sa.ForeignKeyConstraint(['genreId'], ['genre.id'], name=op.f('fk_book_genre_genreId_genre')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book_genre'))
    )
    op.create_table('book_stock',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('bookId', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['bookId'], ['book.id'], name=op.f('fk_book_stock_bookId_book')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book_stock'))
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password', sa.String(length=60), nullable=False),
    sa.Column('profile', sa.Uuid(), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['profile'], ['users_profiles.id'], name=op.f('fk_user_profile_users_profiles')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user')),
    sa.UniqueConstraint('email', name=op.f('uq_user_email'))
    )
    op.create_table('book_borrowing',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('userId', sa.Uuid(), nullable=False),
    sa.Column('bookId', sa.Uuid(), nullable=False),
    sa.Column('returnDate', sa.Date(), nullable=False),
    sa.Column('registerDate', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['bookId'], ['book.id'], name=op.f('fk_book_borrowing_bookId_book')),
    sa.ForeignKeyConstraint(['userId'], ['user.id'], name=op.f('fk_book_borrowing_userId_user')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_book_borrowing'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('book_borrowing')
    op.drop_table('user')
    op.drop_table('book_stock')
    op.drop_table('book_genre')
    op.drop_table('users_profiles')
    op.drop_table('genre')
    op.drop_table('book')
    # ### end Alembic commands ###
